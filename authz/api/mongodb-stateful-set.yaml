apiVersion: v1
kind: Service
metadata:
  name: mongo-authz
  labels:
    name: mongo-authz
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo-authz
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-reader
rules:
  - apiGroups: [""]
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-reader-rolebinding
subjects:
  - kind: ServiceAccount
    name: mongodb
    namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: pod-reader
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: mongo-authz
spec:
  serviceName: mongo-authz
  replicas: 1
  template:
    metadata:
      labels:
        role: mongo-authz
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: mongodb
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip"
            - 0.0.0.0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-authz-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo-authz"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: mongo-authz
  volumeClaimTemplates:
    - metadata:
        name: mongo-authz-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "gp2"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
  selector:
    matchLabels:
      role: mongo-authz
